{"version":3,"sources":["file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/_colores.scss","file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/componentes/_tarjetas.scss","file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/componentes/_breakpoints.scss","file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/componentes/_botones.scss","file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/componentes/_utilidades.scss","file:/C:/Users/cristian/Desktop/Clase%2024-25/proyectoDiw_2%C2%AAEval/dev/scss/componentes/_grid.scss"],"names":[],"mappings":"iBAiBM,iCACE,iBAAA,sBADF,iCACE,iBAAA,uBADF,iCACE,iBAAA,uBADF,iCACE,iBAAA,uBAUF,gCACE,iBAAA,sBADF,gCACE,iBAAA,qBADF,gCACE,iBAAA,oBADF,gCACE,iBAAA,oBAUN,mBACE,iBAAA,QAEF,qBACE,MAAA,QA1BE,6BACE,iBAAA,qBADF,6BACE,iBAAA,qBADF,6BACE,iBAAA,qBADF,6BACE,iBAAA,qBAUF,4BACE,iBAAA,qBADF,4BACE,iBAAA,qBADF,4BACE,iBAAA,kBADF,4BACE,iBAAA,kBAUN,eACE,iBAAA,QAEF,iBACE,MAAA,QA1BE,yCACE,iBAAA,oBADF,yCACE,iBAAA,qBADF,yCACE,iBAAA,qBADF,yCACE,iBAAA,qBAUF,wCACE,iBAAA,oBADF,wCACE,iBAAA,mBADF,wCACE,iBAAA,kBADF,wCACE,iBAAA,iBAUN,2BACE,iBAAA,QAEF,6BACE,MAAA,QA1BE,8BACE,iBAAA,sBADF,8BACE,iBAAA,uBADF,8BACE,iBAAA,uBADF,8BACE,iBAAA,uBAUF,6BACE,iBAAA,qBADF,6BACE,iBAAA,qBADF,6BACE,iBAAA,oBADF,6BACE,iBAAA,mBAUN,gBACE,iBAAA,QAEF,kBACE,MAAA,QA1BE,+BACE,iBAAA,oBADF,+BACE,iBAAA,qBADF,+BACE,iBAAA,qBADF,+BACE,iBAAA,qBAUF,8BACE,iBAAA,mBADF,8BACE,iBAAA,mBADF,8BACE,iBAAA,kBADF,8BACE,iBAAA,kBAUN,iBACE,iBAAA,QAEF,mBACE,MAAA,QA1BE,0BACE,iBAAA,KADF,0BACE,iBAAA,KADF,0BACE,iBAAA,KADF,0BACE,iBAAA,KAUF,yBACE,iBAAA,KADF,yBACE,iBAAA,KADF,yBACE,iBAAA,KADF,yBACE,iBAAA,KAUN,YACE,iBAAA,KAEF,cACE,MAAA,KA1BE,+BACE,iBAAA,qBADF,+BACE,iBAAA,qBADF,+BACE,iBAAA,qBADF,+BACE,iBAAA,qBAUF,8BACE,iBAAA,oBADF,8BACE,iBAAA,mBADF,8BACE,iBAAA,kBADF,8BACE,iBAA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","file":"index.css","sourcesContent":["@use \"variables\" as *;\r\n@use \"sass:color\";\r\n\r\n//TENGO QUE CREAR UN EACH QUE ME RECORRA LA\r\n//PALETA DE COLORES Y CREE UNA CLASE\r\n//POR CADA COLOR COMO COLOR DE FONDO Y COLOR\r\n//DE LETRA\r\n\r\n@each $nombre, $color in $paleta {\r\n  // Ignorar blanco y negro\r\n  @if $color !=\r\n    map-get($map: $paleta, $key: blanco) and\r\n    $color !=\r\n    map-get($map: $paleta, $key: negro)\r\n  {\r\n    // Generar colores aclarados\r\n    @for $i from 1 through 4 {\r\n      .bg-color-light-#{$i * 2}-#{$nombre} {\r\n        background-color: mix(\r\n          map-get($map: $paleta, $key: blanco),\r\n          $color,\r\n          $i * 20%\r\n        );\r\n      }\r\n    }\r\n\r\n    // Generar colores oscurecidos\r\n    @for $i from 1 through 4 {\r\n      .bg-color-dark-#{$i * 2}-#{$nombre} {\r\n        background-color: mix(\r\n          map-get($map: $paleta, $key: negro),\r\n          $color,\r\n          $i * 20%\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  // Clases básicas de fondo y texto\r\n  .bg-#{$nombre} {\r\n    background-color: $color;\r\n  }\r\n  .text-#{$nombre} {\r\n    color: $color;\r\n  }\r\n}\r\n\r\n/* \r\nEl codigo viejo no puedo dejarlo comentado porque no le gustaba y de me daba error osea que lo voy a dejar \r\nen un archivo txt en el proyecto\r\n*/\r\n","@use \"../variables\" as *;\r\n@use \"../colores\" as *;\r\n@use \"breakpoints\" as *;\r\n/* \r\n<div class=\"card\" style=\"width: 18rem;\">\r\n  <img src=\"...\" class=\"card-img-top\" alt=\"...\">\r\n  <div class=\"card-body\">\r\n    <h5 class=\"card-title\">Card title</h5>\r\n    <p class=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p>\r\n    <a href=\"#\" class=\"btn btn-primary\">Go somewhere</a>\r\n  </div>\r\n</div> */\r\n\r\n//mi duda es:\r\n/* ¿Donde escribo el codigo html para hacer la\r\nlos estilos en esta clase? */\r\n\r\n// Fondo y texto según el tamaño de pantalla\r\n/*  ¿Qué hace este código?\r\n\r\nImporta los breakpoints y colores.\r\nUsa @include breakpoint(xs), @include breakpoint(sm), etc. para cambiar los colores de fondo y texto de .property-card según el tamaño de la pantalla.\r\nColores más oscuros en móviles y más claros en pantallas grandes. */\r\n// Definimos los estilos por defecto\r\n\r\n.cardfoto {\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 18rem;\r\n  border: 1px solid;\r\n  border-radius: $border-radius;\r\n  background-color: #fff;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  overflow: hidden;\r\n\r\n  &-img-top {\r\n    width: 100%;\r\n    height: auto;\r\n    object-fit: cover;\r\n  }\r\n\r\n  &-body {\r\n    padding: $padding-base;\r\n  }\r\n  &-title {\r\n    margin-bottom: 0.75rem;\r\n    font-size: 1.25rem;\r\n    font-weight: 500;\r\n  }\r\n\r\n  &-text {\r\n    margin-bottom: $padding-base;\r\n    font-size: $padding-base;\r\n    color: #6c757d;\r\n  }\r\n\r\n  .btn {\r\n    display: inline-block;\r\n    font-size: $padding-base;\r\n    font-weight: 400;\r\n    color: #fff;\r\n    background-color: $primary;\r\n    border: 1px solid $primary;\r\n    border-radius: $border-radius;\r\n    padding: 0.5rem $padding-base;\r\n    text-decoration: none;\r\n    text-align: center;\r\n\r\n    &:hover {\r\n      background-color: #0056b3;\r\n      border-color: #0056b3;\r\n    }\r\n  }\r\n}\r\n\r\n.property-card {\r\n  width: 20rem;\r\n  border: 1px solid #ccc;\r\n  border-radius: 8px;\r\n  overflow: hidden;\r\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\r\n  background-color: #fff;\r\n  font-family: Arial, sans-serif;\r\n}\r\n\r\n.property-card-img {\r\n  width: 100%;\r\n  height: 12rem;\r\n  object-fit: cover;\r\n}\r\n\r\n.property-card-body {\r\n  padding: 1rem;\r\n}\r\n\r\n.property-title {\r\n  font-size: 1.5rem;\r\n  font-weight: bold;\r\n  margin: 0.5rem 0;\r\n  color: #333;\r\n}\r\n\r\n.property-description {\r\n  font-size: 0.9rem;\r\n  color: #666;\r\n  margin-bottom: 0.5rem;\r\n}\r\n\r\n.property-price {\r\n  font-size: 1.2rem;\r\n  font-weight: bold;\r\n  color: #2ecc71; /* Verde */\r\n  margin: 0.5rem 0;\r\n}\r\n\r\n.property-icons {\r\n  display: flex;\r\n  justify-content: space-around;\r\n  font-size: 1rem;\r\n  margin: 0.5rem 0;\r\n  color: #333;\r\n}\r\n\r\n.property-btn {\r\n  display: block;\r\n  width: 100%;\r\n  padding: 0.75rem;\r\n  background-color: #e67e22; /* Naranja */\r\n  color: #fff;\r\n  border: none;\r\n  border-radius: 4px;\r\n  font-size: 1rem;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  transition: background-color 0.3s;\r\n}\r\n\r\n.property-btn:hover {\r\n  background-color: #d35400; /* Naranja más oscuro */\r\n}\r\n\r\n.property-card {\r\n  @include breakpoint(xs) {\r\n    background-color: map-get($paleta, \"azul-oscuro\");\r\n    color: map-get($paleta, \"blanco\");\r\n  }\r\n\r\n  @include breakpoint(sm) {\r\n    background-color: map-get($paleta, \"azul-principal\");\r\n    color: map-get($paleta, \"blanco\");\r\n  }\r\n\r\n  @include breakpoint(md) {\r\n    background-color: map-get($paleta, \"celeste\");\r\n    color: map-get($paleta, \"negro\");\r\n  }\r\n\r\n  @include breakpoint(lg) {\r\n    background-color: map-get($paleta, \"verde-suave\");\r\n    color: map-get($paleta, \"negro\");\r\n  }\r\n\r\n  @include breakpoint(xl) {\r\n    background-color: map-get($paleta, \"gris-claro\");\r\n    color: map-get($paleta, \"negro\");\r\n  }\r\n}\r\n","// Definir los breakpoints según Bootstrap\r\n/* \r\n📌 ¿Qué hace este código?\r\n\r\nDefine un mapa $breakpoints con los tamaños estándar de Bootstrap.\r\nCrea un mixin @mixin breakpoint($size) que recibe un tamaño y genera la media query automáticamente.\r\nVerifica que el tamaño esté en el mapa antes de aplicar la media query. */\r\n$breakpoints: (\r\n  \"xs\": 0,\r\n  \"sm\": 576px,\r\n  \"md\": 768px,\r\n  \"lg\": 992px,\r\n  \"xl\": 1200px,\r\n  \"xxl\": 1400px,\r\n);\r\n\r\n// Mixin para aplicar media queries dinámicamente\r\n@mixin breakpoint($size) {\r\n  @if map-has-key($breakpoints, $size) {\r\n    @media (min-width: #{map-get($breakpoints, $size)}) {\r\n      @content;\r\n    }\r\n  } @else {\r\n    @warn \"El breakpoint #{$size} no está definido en el mapa.\";\r\n  }\r\n}\r\n","// Importar las variables y colores necesarios\r\n@use \"../variables\" as *;\r\n@use \"../colores\" as *;\r\n@use \"../componentes/breakpoints\" as *;\r\n\r\n.property-btn {\r\n  padding: 0.75rem 1.5rem;\r\n  border: none;\r\n  border-radius: 5px;\r\n  font-weight: bold;\r\n\r\n  @include breakpoint(xs) {\r\n    font-size: 0.8rem;\r\n  }\r\n  @include breakpoint(sm) {\r\n    font-size: 1rem;\r\n  }\r\n  @include breakpoint(md) {\r\n    font-size: 1.2rem;\r\n  }\r\n  @include breakpoint(lg) {\r\n    font-size: 1.5rem;\r\n  }\r\n  @include breakpoint(xl) {\r\n    font-size: 1.75rem;\r\n  }\r\n}\r\n\r\n@mixin boton-estilo($color) {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  border: 0;\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 20px;\r\n  background-color: $color;\r\n  color: map-get($map: $paleta, $key: blanco); // Texto blanco\r\n  transition: background-color 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: lighten($color, 10%); // Aclarar el color en hover\r\n  }\r\n}\r\n\r\n@each $nombre, $color in $paleta {\r\n  .btn-#{$nombre} {\r\n    @include boton-estilo($color);\r\n  }\r\n}\r\n\r\n@mixin boton-borde-estilo($color) {\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  display: inline-block;\r\n  border: 1px solid $color; // Borde del color correspondiente\r\n  padding: 0.75rem 1.5rem;\r\n  border-radius: 20px;\r\n  background-color: map-get($map: $paleta, $key: blanco); // Fondo blanco\r\n  color: $color; // Texto del color correspondiente\r\n  transition: all 0.3s ease;\r\n\r\n  &:hover {\r\n    background-color: $color; // Fondo del color correspondiente\r\n    color: map-get($map: $paleta, $key: blanco); // Texto blanco en hover\r\n  }\r\n}\r\n\r\n@each $nombre, $color in $paleta {\r\n  .btn-borde-#{$nombre} {\r\n    @include boton-borde-estilo($color);\r\n  }\r\n}\r\n\r\n// Función para calcular el color complementario\r\n@function complementario($color) {\r\n  @return complement($color); // Utiliza el módulo de colores de Sass\r\n}\r\n\r\n// Generar las clases de botones con color complementario\r\n@each $nombre, $color in $paleta {\r\n  .btn-complement-#{$nombre} {\r\n    text-decoration: none;\r\n    cursor: pointer;\r\n    display: inline-block;\r\n    padding: 0.75rem 1.5rem;\r\n    border: 0;\r\n    border-radius: 20px;\r\n    background-color: $color; // Fondo del botón\r\n    color: complementario($color); // Texto del color complementario\r\n    transition: all 0.3s ease;\r\n\r\n    &:hover {\r\n      background-color: complementario($color); // Fondo pasa al complementario\r\n      color: $color; // Texto pasa al color original\r\n    }\r\n  }\r\n}\r\n","@use \"../variables\" as *;\r\n@use \"../colores\" as *;\r\n$base-margin: 0.5rem;\r\n$base-padding: 0.5rem;\r\n$base-opacity: 0.1;\r\n$base-font-size: 1rem;\r\n\r\n$utilities: (\r\n  \"margin\": (\r\n    \"prefix\": \"m\",\r\n    \"values\": (\r\n      \"0\": 0,\r\n      \"1\": $base-margin,\r\n      \"2\": $base-margin * 2,\r\n      \"3\": $base-margin * 4,\r\n      \"4\": $base-margin * 6,\r\n      \"5\": $base-margin * 8,\r\n    ),\r\n  ),\r\n  \"padding\": (\r\n    \"prefix\": \"p\",\r\n    \"values\": (\r\n      \"0\": 0,\r\n      \"1\": $base-padding,\r\n      \"2\": $base-padding * 2,\r\n      \"3\": $base-padding * 4,\r\n      \"4\": $base-padding * 6,\r\n      \"5\": $base-padding * 8,\r\n    ),\r\n  ),\r\n  \"opacity\": (\r\n    \"prefix\": \"o\",\r\n    \"values\": (\r\n      \"1\": $base-opacity * 1,\r\n      \"2\": $base-opacity * 2,\r\n      \"3\": $base-opacity * 3,\r\n      \"4\": $base-opacity * 4,\r\n      \"5\": $base-opacity * 5,\r\n      \"6\": $base-opacity * 6,\r\n      \"7\": $base-opacity * 7,\r\n      \"8\": $base-opacity * 8,\r\n      \"9\": $base-opacity * 9,\r\n      \"10\": 1,\r\n    ),\r\n  ),\r\n  \"font-size\": (\r\n    \"prefix\": \"font\",\r\n    \"values\": (\r\n      \"xs\": $base-font-size * 0.5,\r\n      \"s\": $base-font-size * 0.75,\r\n      \"l\": $base-font-size * 1.5,\r\n      \"xl\": $base-font-size * 2,\r\n      \"xxl\": $base-font-size * 3,\r\n    ),\r\n  ),\r\n);\r\n\r\n@each $propiedad, $detalles in $utilities {\r\n  $prefix: map-get($detalles, \"prefix\");\r\n  $values: map-get($detalles, \"values\");\r\n\r\n  @each $sufijo, $valor in $values {\r\n    .#{$prefix}-#{$sufijo} {\r\n      @if $propiedad == \"margin\" or $propiedad == \"padding\" {\r\n        #{$propiedad}: #{$valor};\r\n      } @else if $propiedad == \"opacity\" {\r\n        opacity: #{$valor};\r\n      } @else if $propiedad == \"font-size\" {\r\n        font-size: #{$valor};\r\n      }\r\n    }\r\n\r\n    // Clases adicionales para márgenes y paddings\r\n    @if $propiedad == \"margin\" or $propiedad == \"padding\" {\r\n      @each $lado,\r\n        $abreviatura in (\"top\": \"t\", \"bottom\": \"b\", \"left\": \"l\", \"right\": \"r\")\r\n      {\r\n        .#{$prefix}#{$abreviatura}-#{$sufijo} {\r\n          #{$propiedad}-#{$lado}: #{$valor};\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","@use \"sass:math\";\r\n@use \"breakpoints\" as *; // Importamos el archivo de breakpoints\r\n\r\n$grid-columns: 12; // Número total de columnas en el grid\r\n\r\n// Clase base para filas flexibles\r\n.row {\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n}\r\n\r\n// Generar clases de columnas para cada breakpoint\r\n@each $breakpoint, $size in $breakpoints {\r\n  @include breakpoint($breakpoint) {\r\n    @for $i from 1 through $grid-columns {\r\n      .col-#{$breakpoint}-#{$i} {\r\n        box-sizing: border-box;\r\n        flex-grow: 0;\r\n        width: math.div(\r\n          $i * 100%,\r\n          $grid-columns\r\n        ); // Calcula el ancho según el número de columnas\r\n      }\r\n    }\r\n  }\r\n}\r\n"]}